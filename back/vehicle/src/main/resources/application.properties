eureka.client.service-url.defaultZone=http://${REGISTRY_HOST:localhost}:${REGISTRY_PORT:8761}/eureka/
eureka.client.service-url.healthcheck.enabled=true
eureka.instance.prefer-ip-address=true

server.port=8082
spring.application.name=${SPRINGBOOT_APP_NAME:vehicle}

#Spring DataSource
spring.datasource.driverClassName=org.postgresql.Driver

#Podesavanje za Docker!!!!!
spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://${DATABASE_DOMAIN:localhost}:${DATABASE_PORT:5432}/${DATABASE_SCHEMA:maindb}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:admin}

#spring.datasource.initialization-mode=always
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/maindb
#spring.datasource.username=postgres
#spring.datasource.password=admin

#JPA-Hibernate
spring.jpa.show-sql = true

#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih
spring.jpa.hibernate.ddl-auto = create-drop

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#optimizacija za postgres upite
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

spring.http.multipart.enabled=true
spring.http.multipart.max-file-size=20Mb
spring.http.multipart.max-request-size=20Mb

#setting the https
#server.ssl.key-alias=6435570589707950452
#server.ssl.key-store-password=bsep
#server.ssl.key-store=./keystore/vehicle-microservice.p12
#server.ssl.key-store-type=PKCS12
