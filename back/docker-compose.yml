version: '3.7'

services:

  eureka-serviceregistry:
    build: 
        context: ./eureka
        dockerfile: Dockerfile
    ports:
     - "8761:8761"
    networks:
      - xml
    tty: true

   
  zuul-service:
    build: 
        context: ./zuul
        dockerfile: Dockerfile
    restart: on-failure
    image: zuul-image
    volumes:
        - $USERPROFILE/.m2:/root/.m2
    ports:
        - "8081:8081"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    tty: true
    networks:
      - xml
    depends_on:
      - eureka-serviceregistry    
      
  
  catalogue-service:
    build: 
        context: ./catalogue
        dockerfile: Dockerfile
    restart: on-failure
    image: catalogue-image 
    volumes:
    - $USERPROFILE/.m2:/root/.m2
    ports:
    - "8086:8086"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_DOMAIN=postgres
      - DATABASE_SCHEMA=dockertest
    tty: true
    networks:
      - xml
    depends_on:
      - postgres
      - eureka-serviceregistry
    
          
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: on-failure
    networks:
      - xml
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=dockertest
      
  pg_admin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    networks:
        - xml
    ports:
      - "15432:80"
    environment:
      - GUNICORN_THREADS=1
      - PGADMIN_DEFAULT_EMAIL=ivanabrkic192@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres
        
networks:
  xml:
    name: xml
    driver: bridge