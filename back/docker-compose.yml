version: '3.7'

services:

  eureka-serviceregistry:
    build: 
        context: ./eureka
        dockerfile: Dockerfile
    restart: on-failure
    ports:
     - "8761:8761"
    networks:
      - xml
    tty: true

  zuul-service:
    build: 
        context: ./zuul
        dockerfile: Dockerfile
    restart: on-failure
    image: zuul-image
    volumes:
        - $USERPROFILE/.m2:/root/.m2
    ports:
        - "8081:8081"
    command: sh -c "/wait && /entrypoint.sh"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - WAIT_HOSTS=eureka-serviceregistry:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    tty: true
    networks:
      - xml
    depends_on:
      - eureka-serviceregistry   


vehicle-service:
    build: 
        context: ./vehicle
        dockerfile: Dockerfile
    restart: on-failure
    image: vehicle-image 
    volumes:
    - $USERPROFILE/.m2:/root/.m2
    ports:
    - "8082:8082"
    command: sh -c "/wait && /entrypoint.sh"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_DOMAIN=postgres
      - DATABASE_SCHEMA=maindb
      - WAIT_HOSTS=eureka-serviceregistry:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    tty: true
    networks:
      - xml
    depends_on:
      - postgres
      - eureka-serviceregistry
      
  user-service:
    build: 
        context: ./user
        dockerfile: Dockerfile
    restart: on-failure
    image: user-image 
    volumes:
    - $USERPROFILE/.m2:/root/.m2
    ports:
    - "8083:8083"
    command: sh -c "/wait && /entrypoint.sh"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_DOMAIN=postgres
      - DATABASE_SCHEMA=maindb
      - WAIT_HOSTS=eureka-serviceregistry:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    tty: true
    networks:
      - xml
    depends_on:
      - postgres
      - eureka-serviceregistry
      

  pricelist-service:
    build: 
        context: ./pricelist
        dockerfile: Dockerfile
    restart: on-failure
    image: pricelist-image 
    volumes:
    - $USERPROFILE/.m2:/root/.m2
    ports:
    - "8084:8084"
    command: sh -c "/wait && /entrypoint.sh"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_DOMAIN=postgres
      - DATABASE_SCHEMA=maindb
      - WAIT_HOSTS=eureka-serviceregistry:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    tty: true
    networks:
      - xml
    depends_on:
      - postgres
      - eureka-serviceregistry
      

  location-service:
    build: 
        context: ./location
        dockerfile: Dockerfile
    restart: on-failure
    image: location-image 
    volumes:
    - $USERPROFILE/.m2:/root/.m2
    ports:
    - "8085:8085"
    command: sh -c "/wait && /entrypoint.sh"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_DOMAIN=postgres
      - DATABASE_SCHEMA=maindb
      - WAIT_HOSTS=eureka-serviceregistry:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    tty: true
    networks:
      - xml
    depends_on:
      - postgres
      - eureka-serviceregistry
      
  
  catalogue-service:
    build: 
        context: ./catalogue
        dockerfile: Dockerfile
    restart: on-failure
    image: catalogue-image 
    volumes:
    - $USERPROFILE/.m2:/root/.m2
    ports:
    - "8086:8086"
    command: sh -c "/wait && /entrypoint.sh"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_DOMAIN=postgres
      - DATABASE_SCHEMA=maindb
      - WAIT_HOSTS=eureka-serviceregistry:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    tty: true
    networks:
      - xml
    depends_on:
      - postgres
      - eureka-serviceregistry
      
  request-service:
    build: 
        context: ./request
        dockerfile: Dockerfile
    restart: on-failure
    image: request-image 
    volumes:
    - $USERPROFILE/.m2:/root/.m2
    ports:
    - "8087:8087"
    command: sh -c "/wait && /entrypoint.sh"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_DOMAIN=postgres
      - DATABASE_SCHEMA=maindb
      - WAIT_HOSTS=eureka-serviceregistry:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    tty: true
    networks:
      - xml
    depends_on:
      - postgres
      - eureka-serviceregistry
      
      
  review-service:
    build: 
        context: ./review
        dockerfile: Dockerfile
    restart: on-failure
    image: review-image 
    volumes:
    - $USERPROFILE/.m2:/root/.m2
    ports:
    - "8088:8088"
    command: sh -c "/wait && /entrypoint.sh"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_DOMAIN=postgres
      - DATABASE_SCHEMA=maindb
      - WAIT_HOSTS=eureka-serviceregistry:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    tty: true
    networks:
      - xml
    depends_on:
      - postgres
      - eureka-serviceregistry
 
 
  message-service:
    build: 
        context: ./message
        dockerfile: Dockerfile
    restart: on-failure
    image: message-image 
    volumes:
    - $USERPROFILE/.m2:/root/.m2
    ports:
    - "8089:8089"
    command: sh -c "/wait && /entrypoint.sh"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_DOMAIN=postgres
      - DATABASE_SCHEMA=maindb
      - WAIT_HOSTS=eureka-serviceregistry:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    tty: true
    networks:
      - xml
    depends_on:
      - postgres
      - eureka-serviceregistry
     
      
  rabbitmq:
   image: rabbitmq:management
   hostname: rabbitmq
   ports:
     - "5672:5672"
     - "15672:15672"
   networks:
     - xml
      
      
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: on-failure
    networks:
      - xml
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=maindb
      
      
  pg_admin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    networks:
        - xml
    ports:
      - "15432:80"
    environment:
      - GUNICORN_THREADS=1
      - PGADMIN_DEFAULT_EMAIL=ivanabrkic192@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres
        
        
networks:
  xml:
    name: xml
    driver: bridge